{"version":"0.2.9","files":{"/Users/marvinsagun/Desktop/training/nodeJs/projects/testingDebugging/cover/test/testSpec.js":{"stats":{"percentage":1,"lines":[],"missing":0,"seen":7,"total":7,"coverage":{},"source":"var calc = require('../lib/calc');\nvar assert = require('assert');\n\nassert.equal(calc.add(1,1),2);\nassert.equal(calc.subtract(1,1),0);\nassert.equal(calc.multiply(1,1),1);\nassert.equal(calc.devide(1,1),1);","blocks":{"total":0,"seen":0,"missing":0,"percentage":1}},"hash":"f9ec053f1e3d76b8b2f67b975d518b36"},"/Users/marvinsagun/Desktop/training/nodeJs/projects/testingDebugging/cover/lib/calc.js":{"stats":{"percentage":0.8627450980392157,"lines":[{"lineno":26},{"lineno":28},{"lineno":30},{"lineno":31},{"lineno":33},{"lineno":44},{"lineno":47}],"missing":7,"seen":44,"total":51,"coverage":{"26":{"partial":false,"source":"\t\tsetTimeout(function(){","missing":[{}]},"27":{"partial":false,"source":"","missing":[{}]},"28":{"partial":false,"source":"\t\t\tvar error = checkArguments(val1, val2);","missing":[{},{"startCol":3,"endCol":42},{"startCol":15,"endCol":41}]},"29":{"partial":false,"source":"","missing":[{}]},"30":{"partial":false,"source":"\t\t\tif(error){","missing":[{},{"startCol":6,"endCol":11}]},"31":{"partial":false,"source":"\t\t\t\tcallback(error, null);","missing":[{},{"startCol":4,"endCol":25}]},"32":{"partial":false,"source":"\t\t\t} else {","missing":[{}]},"33":{"partial":false,"source":"\t\t\t\tcallback(null, val1+val2);","missing":[{"startCol":4,"endCol":29},{"startCol":19,"endCol":23},{},{"startCol":24,"endCol":28}]},"34":{"partial":false,"source":"\t\t\t}","missing":[{}]},"35":{"partial":false,"source":"","missing":[{}]},"36":{"partial":false,"source":"\t\t}, 1000);","missing":[{}]},"44":{"partial":false,"source":"\t\tthrow new Error(\"Invalid Agr1\");","missing":[{"startCol":2,"endCol":34}]},"47":{"partial":false,"source":"\t\tthrow new Error(\"Invalid Agr2\");","missing":[{"startCol":2,"endCol":34}]}},"source":"console.log(\"Unit testing with Node Unit Module\");\n\nmodule.exports = {\n\n\tadd: function(val1, val2){\n\t\tcheckArguments(val1, val2);\n\t\treturn val1 + val2;\n\t},\n\n\tsubtract: function(val1, val2){\n\t\tcheckArguments(val1, val2);\n\t\treturn val1 - val2;\n\t},\n\tmultiply :function(val1, val2){\n\t\tcheckArguments(val1, val2);\n\t\treturn val1 * val2;\n\t},\n\n\tdevide : function(val1, val2){\n\t\tcheckArguments(val1, val2);\n\t\treturn val1 / val2;\n\t},\n\n\taddAsync : function(val1,val2, callback){\n\n\t\tsetTimeout(function(){\n\n\t\t\tvar error = checkArguments(val1, val2);\n\n\t\t\tif(error){\n\t\t\t\tcallback(error, null);\n\t\t\t} else {\n\t\t\t\tcallback(null, val1+val2);\n\t\t\t}\n\n\t\t}, 1000);\n\n\t}\n}\n\nfunction checkArguments(val1, val2){\n\n\tif(isNaN(val1)){\n\t\tthrow new Error(\"Invalid Agr1\");\n\t}\n\tif(isNaN(val2)){\n\t\tthrow new Error(\"Invalid Agr2\");\n\t}\n\n\treturn;\n}","blocks":{"total":11,"seen":5,"missing":6,"percentage":0.45454545454545453}},"hash":"b44b73776156e1ad522bdda726e2064e"}}}